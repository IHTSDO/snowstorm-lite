<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<name>Snowstorm Micro</name>
	<description>SNOMED CT FHIR Terminology Server, with a small memory footprint</description>

	<artifactId>snowstorm-micro</artifactId>
	<version>1.0.0-SNAPSHOT</version>
	<parent>
		<groupId>org.snomed</groupId>
		<artifactId>snomed-parent-bom</artifactId>
		<version>1.0.11-SNAPSHOT</version>
	</parent>

	<properties>
		<packageName>${project.artifactId}</packageName>
		<lucene.version>9.7.0</lucene.version>
	</properties>

	<dependencies>
		<dependency>
			<!-- For RF2 Import -->
			<groupId>org.snomed.otf</groupId>
			<artifactId>snomed-boot</artifactId>
			<exclusions>
				<exclusion>
					<groupId>com.google.collections</groupId>
					<artifactId>google-collections</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.snomed.languages</groupId>
			<artifactId>snomed-ecl-parser</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<dependency>
			<groupId>ca.uhn.hapi.fhir</groupId>
			<artifactId>hapi-fhir-structures-r4</artifactId>
		</dependency>
		<dependency>
			<groupId>ca.uhn.hapi.fhir</groupId>
			<artifactId>hapi-fhir-server</artifactId>
		</dependency>
		<dependency>
			<groupId>ca.uhn.hapi.fhir</groupId>
			<artifactId>hapi-fhir-jpaserver-base</artifactId>
			<exclusions>
				<exclusion>
					<groupId>ca.uhn.hapi.fhir</groupId>
					<artifactId>hapi-fhir-sql-migrate</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.elasticsearch.client</groupId>
					<artifactId>elasticsearch-rest-high-level-client</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.hibernate.search</groupId>
					<artifactId>*</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.apache.lucene</groupId>
					<artifactId>*</artifactId>
				</exclusion>
				<exclusion>
					<!-- Not needed, was causing build failure "Could not find artifact". -->
					<groupId>com.github.jsonld-java</groupId>
					<artifactId>jsonld-java</artifactId>
				</exclusion>
				<exclusion>
					<groupId>com.graphql-java</groupId>
					<artifactId>graphql-java</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.glassfish</groupId>
					<artifactId>javax.el</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.apache.lucene</groupId>
			<artifactId>lucene-core</artifactId>
			<version>${lucene.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.lucene</groupId>
			<artifactId>lucene-queries</artifactId>
			<version>${lucene.version}</version>
		</dependency>
<!--		<dependency>-->
<!--			<groupId>org.apache.lucene</groupId>-->
<!--			<artifactId>lucene-analyzers-common</artifactId>-->
<!--			<version>${lucene.version}</version>-->
<!--		</dependency>-->
		<dependency>
			<groupId>org.apache.lucene</groupId>
			<artifactId>lucene-queryparser</artifactId>
			<version>${lucene.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.lucene</groupId>
			<artifactId>lucene-join</artifactId>
			<version>${lucene.version}</version>
		</dependency>

		<!-- Logging -->
		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-to-slf4j</artifactId>
		</dependency>

		<!-- Test dependencies -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
			<exclusions>
				<exclusion>
					<groupId>org.junit.vintage</groupId>
					<artifactId>junit-vintage-engine</artifactId>
				</exclusion>
				<exclusion>
					<groupId>net.minidev</groupId>
					<artifactId>json-smart</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
	</dependencies>
	<build>
		<plugins>
			<!-- Docker Image Build -->
			<plugin>
				<groupId>com.spotify</groupId>
				<artifactId>dockerfile-maven-plugin</artifactId>
				<configuration>
					<repository>${docker.image.prefix}/${project.artifactId}</repository>
					<buildArgs>
						<JAR_FILE>target/${project.build.finalName}.jar</JAR_FILE>
					</buildArgs>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<configuration>
					<mainClass>org.snomed.snowstormmicro.SnowstormMicroApplication</mainClass>
				</configuration>
				<executions>
					<execution>
						<goals>
							<goal>build-info</goal>
							<goal>repackage</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>

	<profiles>
		<profile>
			<id>deb</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.vafer</groupId>
						<artifactId>jdeb</artifactId>
						<version>1.1.1</version>
						<executions>
							<execution>
								<phase>package</phase>
								<goals>
									<goal>jdeb</goal>
								</goals>
								<configuration>
									<deb>${project.build.directory}/${packageName}-${project.version}-all.deb</deb>
									<controlDir>${basedir}/src/deb/control</controlDir>
									<snapshotExpand>true</snapshotExpand>
									<snapshotEnv>BUILD_NUMBER</snapshotEnv>
									<verbose>true</verbose>
									<classifier>all</classifier>
									<signPackage>false</signPackage>
									<dataSet>
										<data>
											<src>${project.build.directory}/${project.build.finalName}.jar</src>
											<dst>${packageName}.jar</dst>
											<type>file</type>
											<mapper>
												<type>perm</type>
												<prefix>/opt/${packageName}/</prefix>
											</mapper>
										</data>
										<data>
											<src>${basedir}/src/deb/supervisor.conf</src>
											<dst>/etc/supervisor/conf.d/${packageName}.conf</dst>
											<type>file</type>
										</data>
									</dataSet>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>

	<repositories>
		<repository>
			<id>ihtsdo-releases</id>
			<name>ihtsdo-releases</name>
			<releases>
				<enabled>true</enabled>
			</releases>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
			<url>https://nexus3.ihtsdotools.org/repository/maven-releases/</url>
		</repository>
		<repository>
			<id>ihtsdo-snapshots</id>
			<name>ihtsdo-snapshots</name>
			<releases>
				<enabled>false</enabled>
			</releases>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
			<url>https://nexus3.ihtsdotools.org/repository/maven-snapshots/</url>
		</repository>
	</repositories>

</project>
