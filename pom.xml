<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<name>Snowstorm Lite</name>
	<description>SNOMED-CT FHIR Terminology Server, with a small memory footprint</description>

	<artifactId>snowstorm-lite</artifactId>
	<version>2.0.1-beta-SNAPSHOT</version>
	<parent>
		<groupId>org.snomed</groupId>
		<artifactId>snomed-parent-bom</artifactId>
		<version>3.7.1</version>
	</parent>

	<properties>
		<packageName>${project.artifactId}</packageName>

		<!-- Version overrides, usually for CVE fixes -->
		<!-- These must be reviewed after each BOM upgrade -->
		<spring-boot.version>3.3.3</spring-boot.version>
		<spring.version>6.1.14</spring.version>
		<spring.security.version>6.2.7</spring.security.version>
		<fhir_core_version>6.3.25</fhir_core_version>

		<!-- Docker -->
		<docker.registry>docker.io</docker.registry>
		<docker.allowInsecureRegistries>false</docker.allowInsecureRegistries>
		<docker.image.prefix>snomedinternational</docker.image.prefix>
		<docker.image.tag>latest</docker.image.tag>
		<docker.base-image>amazoncorretto:17</docker.base-image>
	</properties>

	<dependencies>
		<!-- SNOMED International Dependencies -->
		<dependency>
			<!-- For RF2 Import -->
			<groupId>org.snomed.otf</groupId>
			<artifactId>snomed-boot</artifactId>
			<exclusions>
				<exclusion>
					<groupId>com.google.collections</groupId>
					<artifactId>google-collections</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.snomed.languages</groupId>
			<artifactId>snomed-ecl-parser</artifactId>
		</dependency>

		<!-- Spring -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-tomcat</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-security</artifactId>
		</dependency>

		<!-- HAPI FHIR -->
		<dependency>
			<groupId>ca.uhn.hapi.fhir</groupId>
			<artifactId>hapi-fhir-structures-r4</artifactId>
		</dependency>
		<dependency>
			<groupId>ca.uhn.hapi.fhir</groupId>
			<artifactId>org.hl7.fhir.r4</artifactId>
			<version>${fhir_core_version}</version>
		</dependency>
		<dependency>
			<groupId>ca.uhn.hapi.fhir</groupId>
			<artifactId>hapi-fhir-server</artifactId>
		</dependency>
		<dependency>
			<groupId>ca.uhn.hapi.fhir</groupId>
			<artifactId>hapi-fhir-jpaserver-base</artifactId>
			<exclusions>
				<exclusion>
					<groupId>ca.uhn.hapi.fhir</groupId>
					<artifactId>hapi-fhir-structures-dstu2</artifactId>
				</exclusion>
				<exclusion>
					<groupId>ca.uhn.hapi.fhir</groupId>
					<artifactId>hapi-fhir-structures-hl7org-dstu2</artifactId>
				</exclusion>
				<exclusion>
					<groupId>ca.uhn.hapi.fhir</groupId>
					<artifactId>hapi-fhir-structures-dstu3</artifactId>
				</exclusion>
				<exclusion>
					<groupId>ca.uhn.hapi.fhir</groupId>
					<artifactId>hapi-fhir-structures-r4b</artifactId>
				</exclusion>
				<exclusion>
					<groupId>ca.uhn.hapi.fhir</groupId>
					<artifactId>hapi-fhir-structures-r5</artifactId>
				</exclusion>
				<exclusion>
					<groupId>ca.uhn.hapi.fhir</groupId>
					<artifactId>hapi-fhir-sql-migrate</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.xerial</groupId>
					<artifactId>sqlite-jdbc</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.elasticsearch.client</groupId>
					<artifactId>elasticsearch-rest-high-level-client</artifactId>
				</exclusion>
				<exclusion>
					<groupId>co.elastic.clients</groupId>
					<artifactId>elasticsearch-java</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.hibernate.search</groupId>
					<artifactId>*</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.apache.lucene</groupId>
					<artifactId>*</artifactId>
				</exclusion>
				<exclusion>
					<!-- Not needed, was causing build failure "Could not find artifact". -->
					<groupId>com.github.jsonld-java</groupId>
					<artifactId>jsonld-java</artifactId>
				</exclusion>
				<exclusion>
					<groupId>com.graphql-java</groupId>
					<artifactId>graphql-java</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.glassfish</groupId>
					<artifactId>javax.el</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.dom4j</groupId>
					<artifactId>dom4j</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.springdoc</groupId>
					<artifactId>springdoc-openapi-starter-webmvc-ui</artifactId>
				</exclusion>
				<exclusion>
					<groupId>com.google.protobuf</groupId>
					<artifactId>protobuf-java</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<!-- Lucene -->
		<dependency>
			<groupId>org.apache.lucene</groupId>
			<artifactId>lucene-core</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.lucene</groupId>
			<artifactId>lucene-queries</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.lucene</groupId>
			<artifactId>lucene-queryparser</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.lucene</groupId>
			<artifactId>lucene-join</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.lucene</groupId>
			<artifactId>lucene-analyzers-common</artifactId>
		</dependency>

		<!-- Logging -->
		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-to-slf4j</artifactId>
		</dependency>
		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-classic</artifactId>
		</dependency>
		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-core</artifactId>
		</dependency>

		<!-- Test dependencies -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
			<exclusions>
				<exclusion>
					<groupId>org.junit.vintage</groupId>
					<artifactId>junit-vintage-engine</artifactId>
				</exclusion>
				<exclusion>
					<groupId>net.minidev</groupId>
					<artifactId>json-smart</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
	</dependencies>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>ca.uhn.hapi.fhir</groupId>
				<artifactId>hapi-fhir-utilities</artifactId>
			</dependency>
			<dependency>
				<groupId>ca.uhn.hapi.fhir</groupId>
				<artifactId>hapi-fhir-validation</artifactId>
			</dependency>
			<dependency>
				<groupId>ca.uhn.hapi.fhir</groupId>
				<artifactId>org.hl7.fhir.validation</artifactId>
				<version>${fhir_core_version}</version>
			</dependency>
			<dependency>
				<groupId>ca.uhn.hapi.fhir</groupId>
				<artifactId>org.hl7.fhir.convertors</artifactId>
				<version>${fhir_core_version}</version>
			</dependency>
			<dependency>
				<groupId>ca.uhn.hapi.fhir</groupId>
				<artifactId>org.hl7.fhir.r5</artifactId>
				<version>${fhir_core_version}</version>
			</dependency>
			<dependency>
				<groupId>ca.uhn.hapi.fhir</groupId>
				<artifactId>org.hl7.fhir.utilities</artifactId>
				<version>${fhir_core_version}</version>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<build>
		<plugins>
			<!-- Create executable jar -->
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<configuration>
					<mainClass>org.snomed.snowstormlite.SnowstormLiteApplication</mainClass>
				</configuration>
				<executions>
					<execution>
						<goals>
							<goal>build-info</goal>
							<goal>repackage</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<!-- Docker Image Build -->
			<plugin>
				<groupId>com.google.cloud.tools</groupId>
				<artifactId>jib-maven-plugin</artifactId>
				<configuration>
					<container>
						<labels>
							<author>SNOMED International &lt;tooling@snomed.org&gt;</author>
						</labels>
						<mainClass>org.snomed.snowstormlite.SnowstormLiteApplication</mainClass>
						<creationTime>USE_CURRENT_TIMESTAMP</creationTime>
						<environment>
							<application.title>${project.name}</application.title>
							<application.version>${project.version}</application.version>
						</environment>
						<jvmFlags>
							<jvmFlag>-Xms1g</jvmFlag>
							<jvmFlag>-Xmx1g</jvmFlag>
							<jvmFlag>-Djava.security.egd=file:/dev/./urandom</jvmFlag>
						</jvmFlags>
						<ports>
							<port>8080</port>
						</ports>
						<volumes>
							<volume>/tmp</volume>
						</volumes>
						<workingDirectory>/app</workingDirectory>
					</container>
					<from>
						<image>${docker.base-image}</image>
						<platforms>
							<platform>
								<architecture>arm64</architecture>
								<os>linux</os>
							</platform>
							<platform>
								<architecture>amd64</architecture>
								<os>linux</os>
							</platform>
						</platforms>
					</from>
					<to>
						<image>${docker.registry}/${docker.image.prefix}/${project.artifactId}</image>
						<tags>
							<tag>${docker.image.tag}</tag>
							<tag>${project.version}</tag>
						</tags>
					</to>
					<allowInsecureRegistries>${docker.allowInsecureRegistries}</allowInsecureRegistries>
				</configuration>
			</plugin>
		</plugins>
	</build>

	<profiles>
		<profile>
			<id>docker-arm64</id>
			<build>
				<plugins>
					<plugin>
						<groupId>com.google.cloud.tools</groupId>
						<artifactId>jib-maven-plugin</artifactId>
						<configuration>
							<from>
								<image>${docker.base-image}</image>
								<platforms>
									<platform>
										<architecture>arm64</architecture>
										<os>linux</os>
									</platform>
								</platforms>
							</from>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>docker-amd64</id>
			<build>
				<plugins>
					<plugin>
						<groupId>com.google.cloud.tools</groupId>
						<artifactId>jib-maven-plugin</artifactId>
						<configuration>
							<from>
								<image>${docker.base-image}</image>
								<platforms>
									<platform>
										<architecture>amd64</architecture>
										<os>linux</os>
									</platform>
								</platforms>
							</from>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>deb</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.vafer</groupId>
						<artifactId>jdeb</artifactId>
						<executions>
							<execution>
								<phase>package</phase>
								<goals>
									<goal>jdeb</goal>
								</goals>
								<configuration>
									<deb>${project.build.directory}/${packageName}-${project.version}-all.deb</deb>
									<controlDir>${basedir}/src/deb/control</controlDir>
									<snapshotExpand>true</snapshotExpand>
									<snapshotEnv>BUILD_NUMBER</snapshotEnv>
									<verbose>true</verbose>
									<classifier>all</classifier>
									<signPackage>false</signPackage>
									<dataSet>
										<data>
											<src>${project.build.directory}/${project.build.finalName}.jar</src>
											<dst>${packageName}.jar</dst>
											<type>file</type>
											<mapper>
												<type>perm</type>
												<prefix>/opt/${packageName}/</prefix>
											</mapper>
										</data>
										<data>
											<src>${basedir}/src/deb/supervisor.conf</src>
											<dst>/etc/supervisor/conf.d/${packageName}.conf</dst>
											<type>file</type>
										</data>
									</dataSet>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>

	<repositories>
		<repository>
			<id>ihtsdo-releases</id>
			<name>ihtsdo-releases</name>
			<releases>
				<enabled>true</enabled>
			</releases>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
			<url>https://nexus3.ihtsdotools.org/repository/maven-releases/</url>
		</repository>
		<repository>
			<id>ihtsdo-snapshots</id>
			<name>ihtsdo-snapshots</name>
			<releases>
				<enabled>false</enabled>
			</releases>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
			<url>https://nexus3.ihtsdotools.org/repository/maven-snapshots/</url>
		</repository>
	</repositories>

</project>
